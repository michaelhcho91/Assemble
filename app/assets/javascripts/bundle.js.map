{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/index.js","webpack:///./lib/piece.js","webpack:///./lib/player.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAA4B;;AAE5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8CAAK;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,WAAW;AAC9B;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC,WAAW;AAC5C;;AAEA;AACA,kBAAkB,WAAW;AAC7B;AACA;;AAEA;AACA,sBAAsB,8CAAK;AAC3B;AACA;AACA;;AAEA,kDAAkD;;AAElD,gDAAgD;AAChD,+BAA+B;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC,qBAAqB,sBAAsB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA,mDAAmD;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,mBAAmB;AACrC,qBAAqB,OAAO;AAC5B,oEAAoE;AACpE;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;ACvMnB;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEe,uEAAQ,E;;;;;;;;;;;;AChGvB;AAAA;AAAA;AAAA;AAAA;AAA8B;AACJ;AACS;AACP;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,+CAAM;AAC3B,KAAK,iCAAiC;AACtC,QAAQ,8CAAK;AACb;AACA,mBAAmB,6CAAI;AACvB;AACA;AACA;AACA;AACA,uBAAuB,kDAAQ;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC,E;;;;;;;;;;;;ACrED;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;ACrEpB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS,wBAAwB;AACjC;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEe,qEAAM,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/index.js\");\n","import Piece from \"./piece\";\n\nconst SHAPES = \"IJLSZOTIJLSZOTIJLSZOTIJLSZOTIJLSZOT123\";\n\nclass Game {\n  constructor(player, context, previewCtx) {\n    this.player = player;\n    this.context = context;\n    this.previewCtx = previewCtx;\n\n    this.board = this.createBoard(10, 20);\n    this.dropCounter = 0;\n    this.dropInterval = 700;\n    this.gameOver = false;\n    this.isPlaying = false;\n    this.lastTime = 0;\n    this.nextPiece = [new Piece().createPiece(\n      SHAPES[Math.floor(Math.random() * SHAPES.length)]\n    )];\n    this.paused = false;\n  }\n\n  autoDrop(time = 0) {\n    if (this.paused) return;\n    \n    const deltaTime = time - this.lastTime;\n    this.lastTime = time;\n    this.dropCounter += deltaTime;\n\n    if (this.dropCounter > this.dropInterval) {\n      this.manualDrop();\n    }\n  }\n\n  createBoard(width, height) {\n    const board = [];\n\n    while (height--) { // while truthy, decrement\n      board.push(\n        new Array(width).fill(0)\n      );\n    }\n\n    return board;\n  }\n\n  draw(canvas) {\n    const ctx = this.context;\n    const previewCtx = this.previewCtx;\n    const nextPiece = this.nextPiece[0];\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    previewCtx.clearRect(0, 0, 120, 120);\n    \n    this.player.drawMatrix( // board\n      this.board, {x: 0, y: 0}, ctx\n    );\n    \n    this.player.drawMatrix( // current piece\n      this.player.matrix, this.player.position, ctx\n    );\n    \n    this.player.drawMatrix(\n      this.createBoard(12, 12), {x: 0, y: 0}, previewCtx\n    );\n\n    this.player.drawMatrix( // next piece\n      nextPiece, {x: 0, y: 0}, previewCtx\n    );\n  }\n\n  generateNext() {\n    const piece = new Piece();\n    const shape = SHAPES[\n      Math.floor(SHAPES.length * Math.random())\n    ];\n\n    this.nextPiece.push(piece.createPiece(shape)); // generate new nextPiece\n\n    this.player.matrix = this.nextPiece.shift(); // set currentPiece to nextPiece\n    this.player.position.x = 3; // back to start position\n    this.player.position.y = 0;\n    \n    if (this.isCollided(this.board, this.player)) {\n      this.gameOver = true;\n      this.isPlaying = false;\n      // this.board.forEach(row => row.fill(0));\n      // render game over screen\n    }\n  }\n  \n  // hardDrop() {\n  //   while (!this.isCollided(this.board, this.player)) {\n  //     this.manualDrop();\n  //   }\n  // }\n  \n  isCollided(board, player) {\n    const [matrix, position] = [player.matrix, player.position];\n\n    for (let y = 0; y < matrix.length; y++) {\n      for (let x = 0; x < matrix[y].length; x++) {\n        const pieceEdge = matrix[y][x];\n        const boardEdge = (board[y + position.y] && board[y + position.y][x + position.x]);\n\n        if (pieceEdge !== 0 && boardEdge !== 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  manualDrop() {\n    if (this.paused) return;\n    \n    this.player.position.y++;\n\n    if (this.isCollided(this.board, this.player)) {\n      this.player.position.y--;\n      this.mergeMatrix(this.board, this.player);\n      this.generateNext();\n    }\n\n    this.dropCounter = 0;\n  }\n\n  mergeMatrix(board, player) {\n    player.matrix.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value !== 0) {\n          board[y + player.position.y][x + player.position.x] = value;\n        }\n      });\n    });\n  }\n\n  moveLat(direction) {\n    this.player.position.x += direction;\n\n    if (this.isCollided(this.board, this.player)) { // check wall collision\n      this.player.position.x -= direction;\n    }\n  }\n\n  playerRotate(direction) {\n    this.rotate(this.player.matrix, direction);\n    const currentPosition = this.player.position.x;\n    let position = 1;\n\n    while (this.isCollided(this.board, this.player)) {\n      this.player.position.x += position;\n\n      if (position > 0) {\n        position = -position + 1;\n      } else {\n        position = -position + -1;\n      }\n\n      if (position > this.player.matrix[0].length) {\n        this.rotate(this.player.matrix, -direction);\n        this.player.position.x = currentPosition;\n        return;\n      }\n    }\n  }\n  \n  rotate(matrix, direction) {\n    for(let y = 0; y < matrix.length; y++) {\n      for (let x = 0; x < y; x++) {\n        [matrix[x][y], matrix[y][x]] = [matrix[y][x], matrix[x][y]]; // transpose\n      }\n    }\n\n    if (direction > 0) {\n      matrix.forEach(row => row.reverse());\n    } else {\n      matrix.reverse();\n    }\n  }\n\n  start(gameView) {\n    gameView.bindControls();\n\n    if (!this.gameOver) {\n      this.board = this.createBoard(10, 20);\n      \n      this.gameOver = false;\n      this.isPlaying = true;\n      \n      gameView.update();\n    }\n\n    // if (this.player.score >= 200) { // increase difficulty\n    //   this.dropInterval -= 100;\n    // }\n  }\n}\n\nexport default Game;","class GameView {\n  constructor(game, canvas) {\n    this.game = game;\n    this.canvas = canvas;\n\n    this.update = this.update.bind(this);\n  }\n\n  drawBoard() {\n    this.game.draw(this.canvas);\n  }\n\n  update(time) {\n    const g = this.game;\n\n    if (g.paused) return;\n\n    if (!g.gameOver) {\n      g.context.clearRect(0, 0, canvas.width, canvas.height);\n\n      this.drawBoard();\n      g.autoDrop(time);\n    } else {\n      g.context.font = \"1.5px Georgia\";\n      g.context.strokeStyle = \"black\";\n      g.context.lineWidth = 0.2;\n      g.context.strokeText(\"Game Over!\", 1, 6);\n      \n      g.context.font = \"1.5px Georgia\";\n      g.context.fillStyle = \"white\";\n      g.context.fillText(\"Game Over!\", 1, 6);\n\n      g.gameOver = true;\n      g.isPlaying = false;\n      return;\n    }\n\n    requestAnimationFrame(this.update);\n  }\n\n  bindControls() {\n    document.addEventListener(\"keydown\", (e) => {\n      switch (e.keyCode) {\n        case 37: // left\n        case 65: // A\n          e.preventDefault();\n\n          if (!this.game.paused) {\n            this.game.moveLat(-1);\n          }\n\n          break;\n        case 39: // right\n        case 68: // D\n          e.preventDefault();\n          \n          if (!this.game.paused) {\n            this.game.moveLat(1);\n          }\n\n          break;\n        case 40: // down\n        case 83: // S\n          e.preventDefault();\n\n          if (!this.game.paused) {\n            this.game.manualDrop();\n          }\n          \n          break;\n        case 16: // SHIFT\n        case 38: // up\n        case 87: // W\n          e.preventDefault();\n\n          if (!this.game.paused) {\n            this.game.playerRotate(-1);\n          }\n\n          break;\n        case 32: // space\n          e.preventDefault();\n\n          if (!this.game.paused) {\n            // this.game.hardDrop();\n            // space for hard drop\n          }\n\n          break;\n        default:\n          break;\n      }\n    });\n  }\n}\n\nexport default GameView;","import Player from \"./player\";\nimport Game from \"./game\";\nimport GameView from \"./game_view\";\nimport Piece from \"./piece\";\n\nconst CANVAS_WIDTH = 300;\nconst CANVAS_HEIGHT = 600;\nconst PREVIEW_WIDTH = 120;\nconst PREVIEW_HEIGHT = 120;\nconst START_X_POS = 3;\nconst START_Y_POS = 0;\nconst SHAPES = \"IJLSZOTIJLSZOTIJLSZOTIJLSZOTIJLSZOT123\";\nconst shape = SHAPES[\n  Math.floor(SHAPES.length * Math.random())\n];\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const preview = document.getElementById(\"next-piece\");\n  const previewCtx = preview.getContext(\"2d\");\n\n  canvas.width = CANVAS_WIDTH;\n  canvas.height = CANVAS_HEIGHT;\n  context.scale(30, 30);\n  preview.width = PREVIEW_WIDTH;\n  preview.height = PREVIEW_HEIGHT;\n  previewCtx.scale(30, 30);\n\n  const player = new Player(\n    { x: START_X_POS, y: START_Y_POS },\n    new Piece().createPiece(shape)\n  );\n  const game = new Game(\n    player,\n    context,\n    previewCtx\n  );\n  const gameView = new GameView(\n    game,\n    canvas\n  );\n\n  document.addEventListener(\"keydown\", (e) => {\n    switch (e.keyCode) {\n      case 13: // enter to start\n        e.preventDefault();\n\n        if (!game.isPlaying) {\n          game.gameOver = false;\n          game.start(gameView);\n        }\n        \n        break;\n      case 80: // p for pause\n        if (game.paused) {\n          game.paused = false;\n          game.start(gameView);\n        } else {\n          game.paused = true;\n        }\n        break;\n      case 77:\n        // m for mute, maybe\n        break;\n      default:\n        break;\n    }\n  });\n});","class Piece {\n  constructor() {\n  }\n  \n  createPiece(shape) {\n    switch (shape) {\n      case \"T\":\n        return [\n          [0, 0, 0],\n          [1, 1, 1],\n          [0, 1, 0]\n        ];\n      case \"O\":\n        return [\n          [2, 2],\n          [2, 2]\n        ];\n      case \"L\":\n        return [\n          [0, 3, 0],\n          [0, 3, 0],\n          [0, 3, 3]\n        ];\n      case \"J\":\n        return [\n          [0, 4, 0],\n          [0, 4, 0],\n          [4, 4, 0]\n        ];\n      case \"I\":\n        return [\n          [0, 5, 0, 0],\n          [0, 5, 0, 0],\n          [0, 5, 0, 0],\n          [0, 5, 0, 0]\n        ];\n      case \"S\":\n        return [\n          [0, 6, 6],\n          [6, 6, 0],\n          [0, 0, 0]\n        ];\n      case \"Z\":\n        return [\n          [7, 7, 0],\n          [0, 7, 7],\n          [0, 0, 0]\n        ];\n      case \"1\":\n        return [\n          [8]\n        ];\n      case \"2\":\n        return [\n          [9, 0],\n          [0, 9]\n        ];\n      case \"3\":\n        return [\n          [10, 0, 0],\n          [0, 10, 0],\n          [0, 0, 10]\n        ];\n      default:\n        break;\n    }\n  }\n}\n\nexport default Piece;","const COLORS = [\n  null,\n  \"red\",\n  \"green\",\n  \"purple\",\n  \"blue\",\n  \"yellow\",\n  \"orange\",\n  \"pink\",\n  \"#E5DA4D\",\n  \"#E3E3E3\",\n  \"#685326\"\n];\n\nclass Player {\n  constructor(position, matrix) {\n    this.position = position;\n    this.matrix = matrix;\n    this.score = 0;\n  }\n\n  drawMatrix(matrix, position, context) {\n    matrix.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value !== 0) { // color pieces\n          context.strokeStyle = \"white\";\n          context.lineWidth = 0.04;\n          context.strokeRect(x + position.x, y + position.y, 1, 1);\n          context.fillStyle = COLORS[value];\n          context.fillRect(x + position.x, y + position.y, 1, 1);\n        } else if (value === 0) { // draw board grid\n          context.strokeStyle = \"white\";\n          context.lineWidth = 0.04;\n          context.strokeRect(x + position.x, y + position.y, 1, 1);\n        }\n      });\n    });\n  }\n}\n\nexport default Player;"],"sourceRoot":""}