{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/index.js","webpack:///./lib/piece.js","webpack:///./lib/player.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAA4B;AACE;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,WAAW;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;AC5FnB;AAAA;AAA4B;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEe,uEAAQ,E;;;;;;;;;;;;AC1CvB;AAAA;AAAA;AAAA;AAAA;AAA8B;AACJ;AACS;AACP;;AAE5B;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,qBAAqB,8CAAK;AAC1B,qBAAqB,+CAAM;AAC3B,KAAK,aAAa;AAClB;AACA;AACA,mBAAmB,6CAAI;AACvB;AACA;AACA;AACA,uBAAuB,kDAAQ;;AAE/B;AACA;AACA,CAAC,E;;;;;;;;;;;;AC3BD;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;ACtEpB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEe,qEAAM,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/index.js\");\n","import Piece from \"./piece\";\nimport Player from \"./player\";\n\nclass Game {\n  constructor(player, context) {\n    this.player = player;\n    this.context = context;\n\n    this.lastTime = 0;\n    this.dropCounter = 0;\n    this.dropInterval = 1000;\n    this.board = this.createBoard(12, 20);\n\n    this.drop = this.drop.bind(this);\n    this.draw = this.draw.bind(this);\n    this.playerDrop = this.playerDrop.bind(this);\n    this.isCollided = this.isCollided.bind(this);\n    this.mergeMatrix = this.mergeMatrix.bind(this);\n  }\n\n  draw(canvas) {\n    const c = this.context;\n    c.clearRect(0, 0, canvas.width, canvas.height);\n    \n    this.player.drawMatrix(\n      this.player.matrix, this.player.position, c\n    );\n\n    this.player.drawMatrix(\n      this.board, {x: 0, y: 0}, c\n    );\n  }\n\n  createBoard(width, height) {\n    const board = [];\n\n    while (height--) {\n      board.push(\n        new Array(width).fill(0)\n      );\n    }\n\n    return board;\n  }\n  \n  isCollided(board, player) {\n    const [matrix, offset] = [player.matrix, player.position];\n\n    for (let y = 0; y < matrix.length; y++) {\n      for (let x = 0; x < matrix[y].length; x++) {\n        if (matrix[y][x] !== 0 && (board[y + offset.y] && board[y + offset.y][x + offset.x]) !== 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n  \n  playerDrop() {\n    this.player.position.y++;\n\n    if (this.isCollided(this.board, this.player)) {\n      this.player.position.y--;\n      this.mergeMatrix(this.board, this.player);\n      this.player.position.y = 0;\n    }\n\n    this.dropCounter = 0;\n  }\n\n  drop(time) {\n    const deltaTime = time - this.lastTime;\n    this.lastTime = time;\n    this.dropCounter += deltaTime;\n\n    if (this.dropCounter > this.dropInterval) {\n      this.playerDrop();\n    }\n  }\n\n  mergeMatrix(board, player) {\n    player.matrix.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value !== 0) {\n          board[y + player.position.y][x + player.position.x] = value;\n        }\n      });\n    });\n  }\n}\n\nexport default Game;","import Piece from \"./piece\";\n\nclass GameView {\n  constructor(game, canvas) {\n    this.game = game;\n    this.canvas = canvas;\n\n    this.update = this.update.bind(this);\n    this.drawBoard = this.drawBoard.bind(this);\n    this.bindControls = this.bindControls.bind(this);\n  }\n\n  drawBoard(canvas) {\n    this.game.draw(canvas);\n  }\n\n  update(time = 0) {\n    this.game.drop(time);\n    this.drawBoard(this.canvas);\n    requestAnimationFrame(this.update);\n  }\n\n  bindControls() {\n    document.addEventListener(\"keydown\", (e) => {\n      switch (e.keyCode) {\n        case 37:\n          this.game.player.position.x--;\n          break;\n        case 39:\n          this.game.player.position.x++;\n          break;\n        case 40:\n          this.game.playerDrop();\n          break;\n        \n        default:\n          break;\n      }\n    });\n  }\n}\n\nexport default GameView;","import Player from \"./player\";\nimport Game from \"./game\";\nimport GameView from \"./game_view\";\nimport Piece from \"./piece\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n\n  canvas.width = 360;\n  canvas.height = 600;\n\n  context.scale(30, 30);\n\n  const matrix = new Piece().createPiece(\"L\");\n  const player = new Player(\n    { x: 3, y: 3 },\n    matrix\n  );\n  const game = new Game(\n    player,\n    context\n  );\n  const gameView = new GameView(game, canvas);\n\n  gameView.bindControls();\n  gameView.update();\n});","class Piece {\n  constructor() {\n    this.createPiece = this.createPiece.bind(this);\n  }\n\n  createPiece(shape) {\n    switch (shape) {\n      case \"T\":\n        return [\n          [0, 0, 0],\n          [1, 1, 1],\n          [0, 1, 0]\n        ];\n      case \"O\":\n        return [\n          [2, 2],\n          [2, 2]\n        ];\n      case \"L\":\n        return [\n          [0, 3, 0],\n          [0, 3, 0],\n          [0, 3, 3]\n        ];\n      case \"J\":\n        return [\n          [0, 4, 0],\n          [0, 4, 0],\n          [4, 4, 0]\n        ];\n      case \"I\":\n        return [\n          [0, 5, 0, 0],\n          [0, 5, 0, 0],\n          [0, 5, 0, 0],\n          [0, 5, 0, 0]\n        ];\n      case \"S\":\n        return [\n          [0, 6, 6],\n          [6, 6, 0],\n          [0, 0, 0]\n        ];\n      case \"Z\":\n        return [\n          [7, 7, 0],\n          [0, 7, 7],\n          [0, 0, 0]\n        ];\n      case \"1\":\n        return [\n          [8]\n        ];\n      case \"2\":\n        return [\n          [9, 0],\n          [0, 9]\n        ];\n      case \"3\":\n        return [\n          [10, 0, 0],\n          [0, 10, 0],\n          [0, 0, 10]\n        ];\n      default:\n        break;\n    }\n  }\n}\n\nexport default Piece;","const COLORS = [\n  null,\n  \"#167F39\",\n  \"#DE264C\",\n  \"#0074D9\",\n  \"#FA5B0F\",\n  \"#FFDC00\",\n  \"#D40D12\",\n  \"#25064C\",\n  \"#63A69F\",\n  \"#F2E1AC\",\n  \"#F2836B\"\n];\n\nclass Player {\n  constructor(position, matrix) {\n    this.position = position;\n    this.matrix = matrix;\n\n    this.drawMatrix = this.drawMatrix.bind(this);\n  }\n\n  drawMatrix(matrix, offset, context) {\n    matrix.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value !== 0) {\n          context.fillStyle = COLORS[value];\n          context.fillRect(x + offset.x, y + offset.y, 1, 1);\n        }\n      });\n    });\n  }\n}\n\nexport default Player;"],"sourceRoot":""}